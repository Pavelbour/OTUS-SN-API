/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4805.0, "series": [{"data": [[0.0, 1.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 9.0], [7.1, 9.0], [7.2, 9.0], [7.3, 9.0], [7.4, 9.0], [7.5, 9.0], [7.6, 10.0], [7.7, 10.0], [7.8, 10.0], [7.9, 10.0], [8.0, 10.0], [8.1, 10.0], [8.2, 10.0], [8.3, 10.0], [8.4, 10.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 11.0], [9.0, 11.0], [9.1, 11.0], [9.2, 11.0], [9.3, 11.0], [9.4, 11.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 13.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 15.0], [12.7, 15.0], [12.8, 15.0], [12.9, 15.0], [13.0, 15.0], [13.1, 15.0], [13.2, 15.0], [13.3, 15.0], [13.4, 15.0], [13.5, 15.0], [13.6, 16.0], [13.7, 16.0], [13.8, 16.0], [13.9, 16.0], [14.0, 16.0], [14.1, 16.0], [14.2, 16.0], [14.3, 16.0], [14.4, 16.0], [14.5, 17.0], [14.6, 17.0], [14.7, 17.0], [14.8, 17.0], [14.9, 17.0], [15.0, 17.0], [15.1, 17.0], [15.2, 17.0], [15.3, 17.0], [15.4, 17.0], [15.5, 18.0], [15.6, 18.0], [15.7, 18.0], [15.8, 18.0], [15.9, 18.0], [16.0, 18.0], [16.1, 18.0], [16.2, 18.0], [16.3, 18.0], [16.4, 18.0], [16.5, 19.0], [16.6, 19.0], [16.7, 19.0], [16.8, 19.0], [16.9, 19.0], [17.0, 19.0], [17.1, 19.0], [17.2, 19.0], [17.3, 19.0], [17.4, 19.0], [17.5, 20.0], [17.6, 20.0], [17.7, 20.0], [17.8, 20.0], [17.9, 20.0], [18.0, 20.0], [18.1, 20.0], [18.2, 20.0], [18.3, 20.0], [18.4, 21.0], [18.5, 21.0], [18.6, 21.0], [18.7, 21.0], [18.8, 21.0], [18.9, 21.0], [19.0, 21.0], [19.1, 21.0], [19.2, 21.0], [19.3, 21.0], [19.4, 22.0], [19.5, 22.0], [19.6, 22.0], [19.7, 22.0], [19.8, 22.0], [19.9, 22.0], [20.0, 22.0], [20.1, 22.0], [20.2, 22.0], [20.3, 22.0], [20.4, 23.0], [20.5, 23.0], [20.6, 23.0], [20.7, 23.0], [20.8, 23.0], [20.9, 23.0], [21.0, 23.0], [21.1, 23.0], [21.2, 23.0], [21.3, 23.0], [21.4, 24.0], [21.5, 24.0], [21.6, 24.0], [21.7, 24.0], [21.8, 24.0], [21.9, 24.0], [22.0, 24.0], [22.1, 24.0], [22.2, 24.0], [22.3, 25.0], [22.4, 25.0], [22.5, 25.0], [22.6, 25.0], [22.7, 25.0], [22.8, 25.0], [22.9, 25.0], [23.0, 25.0], [23.1, 25.0], [23.2, 25.0], [23.3, 26.0], [23.4, 26.0], [23.5, 26.0], [23.6, 26.0], [23.7, 26.0], [23.8, 26.0], [23.9, 26.0], [24.0, 26.0], [24.1, 26.0], [24.2, 27.0], [24.3, 27.0], [24.4, 27.0], [24.5, 27.0], [24.6, 27.0], [24.7, 27.0], [24.8, 27.0], [24.9, 27.0], [25.0, 28.0], [25.1, 28.0], [25.2, 28.0], [25.3, 28.0], [25.4, 28.0], [25.5, 28.0], [25.6, 28.0], [25.7, 28.0], [25.8, 28.0], [25.9, 28.0], [26.0, 29.0], [26.1, 29.0], [26.2, 29.0], [26.3, 29.0], [26.4, 29.0], [26.5, 29.0], [26.6, 29.0], [26.7, 29.0], [26.8, 30.0], [26.9, 30.0], [27.0, 30.0], [27.1, 30.0], [27.2, 30.0], [27.3, 30.0], [27.4, 30.0], [27.5, 30.0], [27.6, 30.0], [27.7, 31.0], [27.8, 31.0], [27.9, 31.0], [28.0, 31.0], [28.1, 31.0], [28.2, 31.0], [28.3, 31.0], [28.4, 31.0], [28.5, 32.0], [28.6, 32.0], [28.7, 32.0], [28.8, 32.0], [28.9, 32.0], [29.0, 32.0], [29.1, 32.0], [29.2, 32.0], [29.3, 32.0], [29.4, 33.0], [29.5, 33.0], [29.6, 33.0], [29.7, 33.0], [29.8, 33.0], [29.9, 33.0], [30.0, 33.0], [30.1, 33.0], [30.2, 34.0], [30.3, 34.0], [30.4, 34.0], [30.5, 34.0], [30.6, 34.0], [30.7, 34.0], [30.8, 34.0], [30.9, 34.0], [31.0, 34.0], [31.1, 35.0], [31.2, 35.0], [31.3, 35.0], [31.4, 35.0], [31.5, 35.0], [31.6, 35.0], [31.7, 35.0], [31.8, 35.0], [31.9, 36.0], [32.0, 36.0], [32.1, 36.0], [32.2, 36.0], [32.3, 36.0], [32.4, 36.0], [32.5, 36.0], [32.6, 36.0], [32.7, 37.0], [32.8, 37.0], [32.9, 37.0], [33.0, 37.0], [33.1, 37.0], [33.2, 37.0], [33.3, 37.0], [33.4, 37.0], [33.5, 38.0], [33.6, 38.0], [33.7, 38.0], [33.8, 38.0], [33.9, 38.0], [34.0, 38.0], [34.1, 38.0], [34.2, 38.0], [34.3, 39.0], [34.4, 39.0], [34.5, 39.0], [34.6, 39.0], [34.7, 39.0], [34.8, 39.0], [34.9, 39.0], [35.0, 40.0], [35.1, 40.0], [35.2, 40.0], [35.3, 40.0], [35.4, 40.0], [35.5, 40.0], [35.6, 40.0], [35.7, 40.0], [35.8, 41.0], [35.9, 41.0], [36.0, 41.0], [36.1, 41.0], [36.2, 41.0], [36.3, 41.0], [36.4, 41.0], [36.5, 41.0], [36.6, 42.0], [36.7, 42.0], [36.8, 42.0], [36.9, 42.0], [37.0, 42.0], [37.1, 42.0], [37.2, 42.0], [37.3, 42.0], [37.4, 43.0], [37.5, 43.0], [37.6, 43.0], [37.7, 43.0], [37.8, 43.0], [37.9, 43.0], [38.0, 43.0], [38.1, 44.0], [38.2, 44.0], [38.3, 44.0], [38.4, 44.0], [38.5, 44.0], [38.6, 44.0], [38.7, 44.0], [38.8, 44.0], [38.9, 45.0], [39.0, 45.0], [39.1, 45.0], [39.2, 45.0], [39.3, 45.0], [39.4, 45.0], [39.5, 45.0], [39.6, 46.0], [39.7, 46.0], [39.8, 46.0], [39.9, 46.0], [40.0, 46.0], [40.1, 46.0], [40.2, 46.0], [40.3, 46.0], [40.4, 47.0], [40.5, 47.0], [40.6, 47.0], [40.7, 47.0], [40.8, 47.0], [40.9, 47.0], [41.0, 47.0], [41.1, 48.0], [41.2, 48.0], [41.3, 48.0], [41.4, 48.0], [41.5, 48.0], [41.6, 48.0], [41.7, 48.0], [41.8, 48.0], [41.9, 49.0], [42.0, 49.0], [42.1, 49.0], [42.2, 49.0], [42.3, 49.0], [42.4, 49.0], [42.5, 49.0], [42.6, 50.0], [42.7, 50.0], [42.8, 50.0], [42.9, 50.0], [43.0, 50.0], [43.1, 50.0], [43.2, 50.0], [43.3, 51.0], [43.4, 51.0], [43.5, 51.0], [43.6, 51.0], [43.7, 51.0], [43.8, 51.0], [43.9, 51.0], [44.0, 52.0], [44.1, 52.0], [44.2, 52.0], [44.3, 52.0], [44.4, 52.0], [44.5, 52.0], [44.6, 52.0], [44.7, 53.0], [44.8, 53.0], [44.9, 53.0], [45.0, 53.0], [45.1, 53.0], [45.2, 53.0], [45.3, 53.0], [45.4, 54.0], [45.5, 54.0], [45.6, 54.0], [45.7, 54.0], [45.8, 54.0], [45.9, 54.0], [46.0, 54.0], [46.1, 55.0], [46.2, 55.0], [46.3, 55.0], [46.4, 55.0], [46.5, 55.0], [46.6, 55.0], [46.7, 55.0], [46.8, 56.0], [46.9, 56.0], [47.0, 56.0], [47.1, 56.0], [47.2, 56.0], [47.3, 56.0], [47.4, 57.0], [47.5, 57.0], [47.6, 57.0], [47.7, 57.0], [47.8, 57.0], [47.9, 57.0], [48.0, 58.0], [48.1, 58.0], [48.2, 58.0], [48.3, 58.0], [48.4, 58.0], [48.5, 58.0], [48.6, 59.0], [48.7, 59.0], [48.8, 59.0], [48.9, 59.0], [49.0, 59.0], [49.1, 59.0], [49.2, 60.0], [49.3, 60.0], [49.4, 60.0], [49.5, 60.0], [49.6, 60.0], [49.7, 60.0], [49.8, 61.0], [49.9, 61.0], [50.0, 61.0], [50.1, 61.0], [50.2, 61.0], [50.3, 61.0], [50.4, 62.0], [50.5, 62.0], [50.6, 62.0], [50.7, 62.0], [50.8, 62.0], [50.9, 62.0], [51.0, 63.0], [51.1, 63.0], [51.2, 63.0], [51.3, 63.0], [51.4, 63.0], [51.5, 63.0], [51.6, 64.0], [51.7, 64.0], [51.8, 64.0], [51.9, 64.0], [52.0, 64.0], [52.1, 64.0], [52.2, 65.0], [52.3, 65.0], [52.4, 65.0], [52.5, 65.0], [52.6, 65.0], [52.7, 66.0], [52.8, 66.0], [52.9, 66.0], [53.0, 66.0], [53.1, 66.0], [53.2, 66.0], [53.3, 67.0], [53.4, 67.0], [53.5, 67.0], [53.6, 67.0], [53.7, 67.0], [53.8, 68.0], [53.9, 68.0], [54.0, 68.0], [54.1, 68.0], [54.2, 68.0], [54.3, 68.0], [54.4, 69.0], [54.5, 69.0], [54.6, 69.0], [54.7, 69.0], [54.8, 69.0], [54.9, 70.0], [55.0, 70.0], [55.1, 70.0], [55.2, 70.0], [55.3, 71.0], [55.4, 71.0], [55.5, 71.0], [55.6, 71.0], [55.7, 71.0], [55.8, 72.0], [55.9, 72.0], [56.0, 72.0], [56.1, 72.0], [56.2, 72.0], [56.3, 73.0], [56.4, 73.0], [56.5, 73.0], [56.6, 73.0], [56.7, 73.0], [56.8, 74.0], [56.9, 74.0], [57.0, 74.0], [57.1, 74.0], [57.2, 74.0], [57.3, 75.0], [57.4, 75.0], [57.5, 75.0], [57.6, 75.0], [57.7, 75.0], [57.8, 76.0], [57.9, 76.0], [58.0, 76.0], [58.1, 76.0], [58.2, 77.0], [58.3, 77.0], [58.4, 77.0], [58.5, 77.0], [58.6, 77.0], [58.7, 78.0], [58.8, 78.0], [58.9, 78.0], [59.0, 78.0], [59.1, 78.0], [59.2, 79.0], [59.3, 79.0], [59.4, 79.0], [59.5, 79.0], [59.6, 80.0], [59.7, 80.0], [59.8, 80.0], [59.9, 80.0], [60.0, 81.0], [60.1, 81.0], [60.2, 81.0], [60.3, 81.0], [60.4, 81.0], [60.5, 82.0], [60.6, 82.0], [60.7, 82.0], [60.8, 82.0], [60.9, 83.0], [61.0, 83.0], [61.1, 83.0], [61.2, 83.0], [61.3, 84.0], [61.4, 84.0], [61.5, 84.0], [61.6, 84.0], [61.7, 85.0], [61.8, 85.0], [61.9, 85.0], [62.0, 85.0], [62.1, 86.0], [62.2, 86.0], [62.3, 86.0], [62.4, 86.0], [62.5, 87.0], [62.6, 87.0], [62.7, 87.0], [62.8, 87.0], [62.9, 87.0], [63.0, 88.0], [63.1, 88.0], [63.2, 88.0], [63.3, 88.0], [63.4, 89.0], [63.5, 89.0], [63.6, 89.0], [63.7, 90.0], [63.8, 90.0], [63.9, 90.0], [64.0, 90.0], [64.1, 91.0], [64.2, 91.0], [64.3, 91.0], [64.4, 91.0], [64.5, 92.0], [64.6, 92.0], [64.7, 92.0], [64.8, 92.0], [64.9, 93.0], [65.0, 93.0], [65.1, 93.0], [65.2, 94.0], [65.3, 94.0], [65.4, 94.0], [65.5, 94.0], [65.6, 95.0], [65.7, 95.0], [65.8, 95.0], [65.9, 95.0], [66.0, 96.0], [66.1, 96.0], [66.2, 96.0], [66.3, 97.0], [66.4, 97.0], [66.5, 97.0], [66.6, 98.0], [66.7, 98.0], [66.8, 98.0], [66.9, 98.0], [67.0, 99.0], [67.1, 99.0], [67.2, 99.0], [67.3, 100.0], [67.4, 100.0], [67.5, 100.0], [67.6, 100.0], [67.7, 101.0], [67.8, 101.0], [67.9, 101.0], [68.0, 102.0], [68.1, 102.0], [68.2, 102.0], [68.3, 103.0], [68.4, 103.0], [68.5, 103.0], [68.6, 104.0], [68.7, 104.0], [68.8, 104.0], [68.9, 105.0], [69.0, 105.0], [69.1, 105.0], [69.2, 106.0], [69.3, 106.0], [69.4, 106.0], [69.5, 107.0], [69.6, 107.0], [69.7, 107.0], [69.8, 108.0], [69.9, 108.0], [70.0, 108.0], [70.1, 109.0], [70.2, 109.0], [70.3, 109.0], [70.4, 110.0], [70.5, 110.0], [70.6, 111.0], [70.7, 111.0], [70.8, 111.0], [70.9, 112.0], [71.0, 112.0], [71.1, 113.0], [71.2, 113.0], [71.3, 113.0], [71.4, 114.0], [71.5, 114.0], [71.6, 114.0], [71.7, 115.0], [71.8, 115.0], [71.9, 116.0], [72.0, 116.0], [72.1, 117.0], [72.2, 117.0], [72.3, 117.0], [72.4, 118.0], [72.5, 118.0], [72.6, 118.0], [72.7, 119.0], [72.8, 119.0], [72.9, 120.0], [73.0, 120.0], [73.1, 121.0], [73.2, 121.0], [73.3, 121.0], [73.4, 122.0], [73.5, 122.0], [73.6, 123.0], [73.7, 123.0], [73.8, 123.0], [73.9, 124.0], [74.0, 124.0], [74.1, 125.0], [74.2, 125.0], [74.3, 126.0], [74.4, 126.0], [74.5, 127.0], [74.6, 127.0], [74.7, 127.0], [74.8, 128.0], [74.9, 128.0], [75.0, 129.0], [75.1, 129.0], [75.2, 130.0], [75.3, 130.0], [75.4, 131.0], [75.5, 131.0], [75.6, 132.0], [75.7, 132.0], [75.8, 133.0], [75.9, 134.0], [76.0, 134.0], [76.1, 135.0], [76.2, 135.0], [76.3, 136.0], [76.4, 136.0], [76.5, 137.0], [76.6, 138.0], [76.7, 138.0], [76.8, 139.0], [76.9, 140.0], [77.0, 140.0], [77.1, 141.0], [77.2, 142.0], [77.3, 142.0], [77.4, 143.0], [77.5, 143.0], [77.6, 144.0], [77.7, 145.0], [77.8, 145.0], [77.9, 146.0], [78.0, 147.0], [78.1, 147.0], [78.2, 148.0], [78.3, 149.0], [78.4, 150.0], [78.5, 151.0], [78.6, 151.0], [78.7, 152.0], [78.8, 153.0], [78.9, 154.0], [79.0, 155.0], [79.1, 155.0], [79.2, 156.0], [79.3, 157.0], [79.4, 158.0], [79.5, 159.0], [79.6, 160.0], [79.7, 161.0], [79.8, 161.0], [79.9, 162.0], [80.0, 163.0], [80.1, 164.0], [80.2, 165.0], [80.3, 166.0], [80.4, 167.0], [80.5, 168.0], [80.6, 169.0], [80.7, 170.0], [80.8, 171.0], [80.9, 172.0], [81.0, 173.0], [81.1, 174.0], [81.2, 175.0], [81.3, 176.0], [81.4, 178.0], [81.5, 179.0], [81.6, 181.0], [81.7, 182.0], [81.8, 184.0], [81.9, 185.0], [82.0, 187.0], [82.1, 188.0], [82.2, 190.0], [82.3, 191.0], [82.4, 193.0], [82.5, 194.0], [82.6, 196.0], [82.7, 198.0], [82.8, 199.0], [82.9, 201.0], [83.0, 203.0], [83.1, 205.0], [83.2, 207.0], [83.3, 209.0], [83.4, 211.0], [83.5, 213.0], [83.6, 216.0], [83.7, 218.0], [83.8, 220.0], [83.9, 223.0], [84.0, 226.0], [84.1, 228.0], [84.2, 232.0], [84.3, 234.0], [84.4, 238.0], [84.5, 242.0], [84.6, 245.0], [84.7, 250.0], [84.8, 255.0], [84.9, 260.0], [85.0, 267.0], [85.1, 273.0], [85.2, 280.0], [85.3, 287.0], [85.4, 294.0], [85.5, 302.0], [85.6, 312.0], [85.7, 323.0], [85.8, 334.0], [85.9, 346.0], [86.0, 360.0], [86.1, 378.0], [86.2, 409.0], [86.3, 443.0], [86.4, 488.0], [86.5, 573.0], [86.6, 800.0], [86.7, 938.0], [86.8, 1026.0], [86.9, 1093.0], [87.0, 1147.0], [87.1, 1197.0], [87.2, 1233.0], [87.3, 1275.0], [87.4, 1311.0], [87.5, 1351.0], [87.6, 1390.0], [87.7, 1424.0], [87.8, 1456.0], [87.9, 1492.0], [88.0, 1520.0], [88.1, 1557.0], [88.2, 1588.0], [88.3, 1623.0], [88.4, 1655.0], [88.5, 1680.0], [88.6, 1705.0], [88.7, 1729.0], [88.8, 1751.0], [88.9, 1779.0], [89.0, 1803.0], [89.1, 1824.0], [89.2, 1844.0], [89.3, 1862.0], [89.4, 1880.0], [89.5, 1897.0], [89.6, 1912.0], [89.7, 1927.0], [89.8, 1942.0], [89.9, 1957.0], [90.0, 1971.0], [90.1, 1986.0], [90.2, 1999.0], [90.3, 2010.0], [90.4, 2026.0], [90.5, 2038.0], [90.6, 2052.0], [90.7, 2062.0], [90.8, 2073.0], [90.9, 2085.0], [91.0, 2099.0], [91.1, 2112.0], [91.2, 2125.0], [91.3, 2137.0], [91.4, 2150.0], [91.5, 2162.0], [91.6, 2172.0], [91.7, 2184.0], [91.8, 2192.0], [91.9, 2203.0], [92.0, 2213.0], [92.1, 2225.0], [92.2, 2234.0], [92.3, 2243.0], [92.4, 2254.0], [92.5, 2265.0], [92.6, 2274.0], [92.7, 2287.0], [92.8, 2297.0], [92.9, 2308.0], [93.0, 2319.0], [93.1, 2328.0], [93.2, 2336.0], [93.3, 2347.0], [93.4, 2357.0], [93.5, 2366.0], [93.6, 2375.0], [93.7, 2386.0], [93.8, 2395.0], [93.9, 2404.0], [94.0, 2414.0], [94.1, 2425.0], [94.2, 2433.0], [94.3, 2443.0], [94.4, 2453.0], [94.5, 2462.0], [94.6, 2474.0], [94.7, 2485.0], [94.8, 2495.0], [94.9, 2505.0], [95.0, 2515.0], [95.1, 2524.0], [95.2, 2533.0], [95.3, 2544.0], [95.4, 2553.0], [95.5, 2565.0], [95.6, 2576.0], [95.7, 2588.0], [95.8, 2599.0], [95.9, 2609.0], [96.0, 2623.0], [96.1, 2634.0], [96.2, 2647.0], [96.3, 2659.0], [96.4, 2672.0], [96.5, 2685.0], [96.6, 2697.0], [96.7, 2710.0], [96.8, 2722.0], [96.9, 2735.0], [97.0, 2749.0], [97.1, 2764.0], [97.2, 2776.0], [97.3, 2790.0], [97.4, 2802.0], [97.5, 2817.0], [97.6, 2832.0], [97.7, 2850.0], [97.8, 2866.0], [97.9, 2884.0], [98.0, 2902.0], [98.1, 2922.0], [98.2, 2941.0], [98.3, 2961.0], [98.4, 2983.0], [98.5, 3005.0], [98.6, 3032.0], [98.7, 3057.0], [98.8, 3084.0], [98.9, 3122.0], [99.0, 3156.0], [99.1, 3186.0], [99.2, 3219.0], [99.3, 3261.0], [99.4, 3308.0], [99.5, 3357.0], [99.6, 3420.0], [99.7, 3497.0], [99.8, 3619.0], [99.9, 3757.0], [100.0, 4805.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 67294.0, "series": [{"data": [[0.0, 67294.0], [600.0, 35.0], [700.0, 35.0], [800.0, 71.0], [900.0, 100.0], [1000.0, 144.0], [1100.0, 192.0], [1200.0, 257.0], [1300.0, 262.0], [1400.0, 303.0], [1500.0, 308.0], [100.0, 15519.0], [1600.0, 341.0], [1700.0, 405.0], [1800.0, 529.0], [1900.0, 694.0], [2000.0, 799.0], [2100.0, 869.0], [2300.0, 1031.0], [2200.0, 949.0], [2400.0, 994.0], [2500.0, 958.0], [2600.0, 816.0], [2700.0, 759.0], [2800.0, 611.0], [2900.0, 487.0], [3000.0, 362.0], [3100.0, 307.0], [200.0, 2657.0], [3200.0, 243.0], [3300.0, 181.0], [3400.0, 133.0], [3500.0, 85.0], [3700.0, 60.0], [3600.0, 77.0], [3800.0, 32.0], [3900.0, 16.0], [4000.0, 10.0], [4200.0, 4.0], [4100.0, 10.0], [4300.0, 2.0], [4400.0, 1.0], [300.0, 711.0], [4700.0, 1.0], [4800.0, 1.0], [400.0, 232.0], [500.0, 113.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1514.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 86415.0, "series": [{"data": [[0.0, 86415.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1514.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 12071.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 323.6525270758131, "minX": 1.70664876E12, "maxY": 1782.560286866873, "series": [{"data": [[1.70664906E12, 1495.149365009163], [1.70664888E12, 1779.7519364249101], [1.70664894E12, 1782.560286866873], [1.70664876E12, 899.52666489785], [1.70664882E12, 1752.8128040575496], [1.70664912E12, 323.6525270758131], [1.706649E12, 1778.8412032179076]], "isOverall": false, "label": "10000 Users 10 Requests", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70664912E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.0, "maxY": 2688.0, "series": [{"data": [[2.0, 82.0], [3.0, 85.0], [4.0, 48.0], [5.0, 41.0], [6.0, 74.0], [7.0, 71.0], [8.0, 45.0], [9.0, 64.0], [10.0, 56.0], [11.0, 53.0], [12.0, 77.0], [13.0, 63.0], [14.0, 65.0], [15.0, 47.0], [16.0, 51.0], [17.0, 62.5], [19.0, 74.0], [20.0, 69.0], [21.0, 64.0], [22.0, 55.0], [23.0, 57.0], [24.0, 55.0], [25.0, 53.0], [26.0, 52.0], [27.0, 52.0], [28.0, 62.0], [29.0, 57.0], [30.0, 58.0], [31.0, 63.0], [33.0, 59.0], [32.0, 65.0], [35.0, 46.0], [34.0, 56.0], [37.0, 49.0], [36.0, 46.0], [39.0, 150.0], [38.0, 46.0], [41.0, 83.0], [40.0, 108.0], [43.0, 102.0], [42.0, 100.0], [45.0, 83.0], [44.0, 79.0], [47.0, 82.0], [46.0, 69.0], [49.0, 56.0], [48.0, 68.0], [51.0, 51.0], [50.0, 55.0], [53.0, 52.0], [52.0, 54.0], [55.0, 61.0], [54.0, 59.0], [57.0, 44.0], [56.0, 52.0], [59.0, 51.0], [58.0, 45.0], [61.0, 73.0], [60.0, 51.5], [63.0, 96.0], [62.0, 52.0], [67.0, 52.5], [66.0, 63.5], [65.0, 73.0], [64.0, 82.0], [71.0, 98.0], [70.0, 46.0], [69.0, 53.0], [68.0, 54.0], [75.0, 51.0], [74.0, 82.0], [73.0, 82.0], [72.0, 79.0], [79.0, 45.0], [78.0, 53.0], [77.0, 54.0], [76.0, 48.0], [83.0, 80.0], [82.0, 85.0], [81.0, 79.0], [80.0, 91.0], [87.0, 54.0], [86.0, 54.5], [85.0, 68.0], [84.0, 62.0], [91.0, 62.0], [90.0, 72.0], [89.0, 59.0], [88.0, 64.0], [95.0, 206.0], [94.0, 148.0], [93.0, 81.0], [92.0, 140.0], [99.0, 302.0], [98.0, 476.0], [97.0, 290.0], [96.0, 206.0], [103.0, 338.0], [102.0, 188.0], [101.0, 431.5], [100.0, 478.0], [107.0, 661.0], [106.0, 676.0], [105.0, 255.0], [104.0, 216.0], [111.0, 595.0], [110.0, 623.0], [109.0, 590.0], [108.0, 244.0], [115.0, 425.0], [114.0, 885.0], [113.0, 639.0], [112.0, 246.0], [119.0, 662.0], [118.0, 816.0], [117.0, 700.5], [116.0, 874.0], [123.0, 856.0], [122.0, 744.0], [121.0, 863.0], [120.0, 382.0], [127.0, 718.0], [126.0, 420.0], [125.0, 804.0], [124.0, 517.0], [135.0, 536.0], [134.0, 337.0], [133.0, 407.0], [132.0, 992.5], [131.0, 997.0], [130.0, 879.0], [129.0, 812.0], [128.0, 592.0], [143.0, 1281.0], [142.0, 1250.0], [141.0, 1032.0], [140.0, 340.0], [139.0, 1003.0], [138.0, 945.0], [137.0, 1331.0], [136.0, 908.5], [151.0, 988.0], [150.0, 851.0], [149.0, 1307.0], [148.0, 1319.0], [147.0, 1489.0], [146.0, 765.6666666666666], [145.0, 1504.0], [144.0, 1178.0], [159.0, 1428.0], [158.0, 1205.0], [157.0, 498.0], [156.0, 1226.5], [155.0, 568.0], [154.0, 1008.0], [153.0, 1298.0], [152.0, 1060.6666666666667], [167.0, 1123.0], [166.0, 503.0], [165.0, 1178.0], [164.0, 1645.0], [163.0, 1241.0], [162.0, 1675.0], [161.0, 1447.0], [160.0, 1425.0], [175.0, 1473.5], [174.0, 1785.0], [173.0, 1943.5], [172.0, 515.5], [171.0, 1245.5], [170.0, 1309.0], [169.0, 1564.0], [168.0, 2426.0], [176.0, 577.75], [178.0, 1039.0], [180.0, 1114.0], [181.0, 423.0], [182.0, 958.5], [183.0, 957.5], [179.0, 1888.0], [177.0, 1710.0], [184.0, 712.5], [185.0, 374.0], [186.0, 668.6666666666667], [187.0, 1024.2], [188.0, 1180.0], [189.0, 719.0], [190.0, 355.33333333333337], [191.0, 1508.111111111111], [192.0, 987.0], [193.0, 889.5], [195.0, 925.4], [196.0, 1398.3333333333333], [197.0, 806.5], [198.0, 484.0], [199.0, 1013.5], [194.0, 1526.0], [200.0, 1017.0], [201.0, 921.5], [202.0, 473.5], [203.0, 684.0], [204.0, 1257.8], [205.0, 618.5], [206.0, 808.5], [207.0, 1208.5], [208.0, 1055.3333333333333], [209.0, 1372.5], [210.0, 883.0], [211.0, 906.5], [212.0, 927.0], [213.0, 709.5], [214.0, 775.0], [215.0, 1301.6666666666667], [216.0, 1088.0], [217.0, 1198.5], [218.0, 1520.0], [219.0, 1351.75], [220.0, 1461.2], [221.0, 1628.6666666666667], [222.0, 1028.5], [223.0, 1550.3333333333333], [224.0, 995.5], [225.0, 877.0], [226.0, 1017.0], [227.0, 773.5], [228.0, 1459.25], [229.0, 1209.25], [230.0, 1243.5], [231.0, 1476.25], [232.0, 1406.25], [233.0, 1304.0], [234.0, 1578.0], [235.0, 830.0], [236.0, 1253.0], [237.0, 603.5], [238.0, 970.5], [239.0, 552.0], [240.0, 1188.0], [241.0, 452.0], [242.0, 945.5], [243.0, 999.0], [244.0, 1523.0], [245.0, 1444.5], [246.0, 978.5], [247.0, 968.5], [248.0, 913.75], [249.0, 997.0], [250.0, 1087.0], [251.0, 912.0], [252.0, 1067.0], [253.0, 1059.0], [254.0, 1317.3333333333333], [255.0, 1426.6666666666667], [257.0, 987.5], [256.0, 1047.0], [258.0, 1496.25], [259.0, 1284.0], [260.0, 1247.5], [261.0, 1191.0], [262.0, 1189.6666666666667], [263.0, 1460.3333333333333], [264.0, 978.5], [270.0, 1292.5], [271.0, 1499.4285714285713], [268.0, 1556.0], [269.0, 1061.0], [265.0, 1209.5], [266.0, 463.5], [267.0, 535.5], [273.0, 1268.0], [272.0, 1496.25], [274.0, 19.333333333333332], [275.0, 1439.0], [276.0, 1170.5], [277.0, 1263.5], [278.0, 1359.3333333333333], [279.0, 1247.0], [280.0, 1251.5], [286.0, 695.5], [287.0, 25.5], [284.0, 1750.0], [285.0, 1634.4285714285716], [281.0, 1191.5], [282.0, 843.5], [283.0, 1231.5], [290.0, 71.5], [288.0, 30.5], [291.0, 806.0], [300.0, 612.5], [301.0, 892.3333333333334], [302.0, 387.66666666666663], [303.0, 920.0], [292.0, 994.5], [293.0, 957.5], [294.0, 596.0], [295.0, 764.0], [296.0, 723.5], [297.0, 950.5], [298.0, 1414.0], [299.0, 284.6666666666667], [305.0, 1384.6666666666667], [304.0, 1235.5], [306.0, 1066.0], [307.0, 1371.125], [308.0, 1766.4], [309.0, 1612.0], [310.0, 1082.0], [311.0, 834.0], [312.0, 475.0], [318.0, 1200.5], [319.0, 1592.6], [316.0, 1432.0], [317.0, 1780.125], [313.0, 1109.5], [314.0, 1170.6666666666665], [315.0, 1178.75], [321.0, 1581.3333333333335], [320.0, 1004.5], [322.0, 675.0], [323.0, 40.0], [324.0, 698.0], [325.0, 35.666666666666664], [326.0, 1327.0], [327.0, 1209.0], [328.0, 1245.0], [334.0, 969.5], [335.0, 1194.5], [332.0, 1505.8], [333.0, 1766.2], [329.0, 1559.8], [330.0, 1223.6], [331.0, 1125.0], [337.0, 1398.3333333333333], [336.0, 1184.5], [338.0, 1391.6666666666667], [339.0, 1310.6], [340.0, 1001.0], [341.0, 1296.3333333333333], [342.0, 673.5], [343.0, 680.5], [346.0, 1866.4], [348.0, 1785.3333333333333], [349.0, 684.0], [350.0, 59.66666666666667], [351.0, 40.75], [345.0, 2688.0], [344.0, 1500.0], [347.0, 664.3333333333334], [364.0, 952.0], [354.0, 716.3333333333333], [355.0, 787.3333333333334], [358.0, 269.6666666666667], [357.0, 64.0], [359.0, 120.5], [353.0, 44.5], [352.0, 20.0], [361.0, 697.6666666666666], [360.0, 2316.0], [363.0, 41.5], [362.0, 61.66666666666667], [367.0, 1421.0], [366.0, 802.0], [365.0, 255.8571428571429], [368.0, 1122.5], [369.0, 153.66666666666666], [371.0, 2252.0], [370.0, 1342.0], [381.0, 566.5], [380.0, 2205.0], [372.0, 1289.0], [373.0, 1603.25], [374.0, 1462.8], [375.0, 1539.8333333333333], [378.0, 1360.0], [379.0, 1576.6666666666667], [382.0, 454.66666666666663], [383.0, 1322.6666666666667], [377.0, 1924.25], [376.0, 1942.0], [385.0, 1186.142857142857], [384.0, 1068.0], [386.0, 1987.3333333333333], [387.0, 647.6666666666666], [388.0, 848.0], [389.0, 54.0], [390.0, 1341.0], [391.0, 687.6666666666667], [392.0, 208.33333333333331], [393.0, 3.0], [397.0, 287.25], [396.0, 568.0], [398.0, 19.0], [399.0, 1659.5], [394.0, 731.6666666666667], [395.0, 1511.8333333333335], [412.0, 1591.0], [401.0, 1564.0], [403.0, 1192.6666666666667], [402.0, 1829.0], [405.0, 643.5], [404.0, 14.0], [407.0, 669.5], [400.0, 2030.5], [406.0, 2375.0], [408.0, 1390.6666666666667], [409.0, 1685.0], [410.0, 614.25], [411.0, 1879.5], [414.0, 1511.3333333333333], [413.0, 1934.6666666666667], [415.0, 1299.2857142857142], [417.0, 27.5], [416.0, 454.0], [418.0, 1377.25], [419.0, 1532.5], [420.0, 706.6666666666666], [421.0, 344.6363636363636], [422.0, 1612.0], [423.0, 6.0], [424.0, 1047.0625], [431.0, 942.0000000000001], [428.0, 1166.1666666666667], [429.0, 2159.5], [430.0, 1461.2], [425.0, 559.5714285714286], [426.0, 840.4], [427.0, 538.5], [433.0, 235.75000000000003], [432.0, 964.7142857142858], [435.0, 1968.0], [434.0, 651.6666666666667], [444.0, 1099.75], [445.0, 1609.0], [446.0, 1131.0], [447.0, 1588.4], [436.0, 282.0], [437.0, 340.4], [438.0, 944.0], [439.0, 1460.0], [440.0, 815.3333333333333], [441.0, 1052.3333333333333], [442.0, 1006.0], [443.0, 576.8181818181819], [449.0, 1027.25], [448.0, 1002.5], [451.0, 657.9], [450.0, 4.0], [460.0, 1810.3333333333337], [461.0, 2037.75], [462.0, 802.125], [463.0, 1308.6], [457.0, 1821.0], [456.0, 2340.0], [452.0, 835.4], [453.0, 752.1666666666667], [454.0, 950.3333333333334], [455.0, 1670.5714285714287], [458.0, 1535.25], [459.0, 1808.8], [465.0, 2182.3333333333335], [464.0, 1477.5], [466.0, 1826.0], [467.0, 1597.0], [468.0, 1565.6], [469.0, 1340.6], [470.0, 1267.6], [471.0, 891.7499999999999], [472.0, 1382.8], [478.0, 727.5], [477.0, 5.5], [476.0, 799.0], [479.0, 881.75], [473.0, 474.0], [474.0, 1829.8], [475.0, 1221.8181818181818], [482.0, 25.666666666666668], [480.0, 1554.6666666666667], [481.0, 2045.0], [483.0, 1324.0], [492.0, 1087.25], [493.0, 1220.3333333333335], [494.0, 42.5], [495.0, 616.6666666666667], [484.0, 1265.0], [485.0, 613.6666666666667], [486.0, 1579.25], [487.0, 2051.3333333333335], [488.0, 1866.0], [489.0, 1680.2], [491.0, 1672.5], [490.0, 2133.0], [498.0, 1671.1666666666667], [496.0, 959.7142857142857], [497.0, 614.0], [499.0, 1946.5], [508.0, 1010.6666666666666], [509.0, 705.4], [510.0, 1615.9166666666667], [511.0, 1450.6428571428569], [501.0, 441.0], [500.0, 63.0], [502.0, 444.5454545454546], [503.0, 8.0], [504.0, 811.0000000000001], [505.0, 1043.0], [506.0, 639.9375], [507.0, 337.66666666666663], [516.0, 2099.0], [512.0, 1284.6666666666665], [526.0, 1016.2222222222224], [514.0, 677.9999999999999], [518.0, 1145.8333333333333], [536.0, 38.0], [528.0, 1202.7142857142858], [542.0, 473.74999999999994], [540.0, 1187.3333333333335], [538.0, 1050.4444444444443], [530.0, 1545.6666666666667], [532.0, 1925.4], [534.0, 587.25], [520.0, 656.5], [522.0, 1698.5], [524.0, 551.3333333333333], [546.0, 728.5], [556.0, 1550.0], [544.0, 1997.0], [558.0, 1982.0], [550.0, 1208.0], [548.0, 771.5714285714286], [568.0, 628.0], [570.0, 1520.25], [572.0, 1155.875], [574.0, 1545.0], [560.0, 16.0], [562.0, 581.6666666666667], [564.0, 626.0], [566.0, 533.0], [554.0, 584.4], [552.0, 416.33333333333337], [578.0, 703.8333333333334], [576.0, 1067.5], [588.0, 612.6666666666667], [590.0, 1042.5714285714287], [586.0, 996.4999999999999], [580.0, 1149.7999999999997], [582.0, 202.84615384615387], [592.0, 1051.0], [606.0, 1755.7142857142856], [604.0, 852.1666666666665], [600.0, 1069.0], [602.0, 403.2], [594.0, 315.25], [596.0, 1163.125], [598.0, 1872.2500000000002], [584.0, 77.66666666666666], [610.0, 231.875], [608.0, 1546.3333333333335], [622.0, 35.0], [618.0, 1517.3333333333333], [620.0, 1086.142857142857], [612.0, 1651.857142857143], [614.0, 1017.5999999999999], [624.0, 1664.875], [638.0, 756.2], [636.0, 639.1666666666667], [634.0, 1778.25], [632.0, 362.6], [626.0, 767.5], [628.0, 217.8], [630.0, 1711.0], [616.0, 380.83333333333337], [642.0, 954.5], [640.0, 43.2], [654.0, 2007.5], [650.0, 1151.25], [652.0, 464.1428571428571], [644.0, 1168.0], [646.0, 895.3333333333334], [656.0, 304.0], [670.0, 753.0], [668.0, 1994.5], [666.0, 503.0], [664.0, 653.4285714285714], [658.0, 720.1111111111111], [660.0, 316.62499999999994], [662.0, 546.3333333333333], [648.0, 1884.4444444444443], [674.0, 889.4285714285713], [672.0, 1310.6666666666667], [686.0, 1227.3], [684.0, 1992.4], [682.0, 1215.2857142857142], [676.0, 1397.4], [678.0, 376.16666666666663], [688.0, 324.1666666666667], [702.0, 159.29411764705878], [700.0, 2095.2], [698.0, 1522.0], [696.0, 1483.6666666666667], [690.0, 639.0], [692.0, 39.142857142857146], [694.0, 775.3333333333333], [680.0, 625.3333333333333], [706.0, 291.8333333333333], [704.0, 1250.75], [718.0, 2112.5], [716.0, 1045.6], [714.0, 1303.909090909091], [708.0, 1788.75], [710.0, 999.8571428571429], [720.0, 1105.6], [734.0, 315.5714285714286], [732.0, 170.33333333333334], [730.0, 814.2121212121211], [728.0, 1592.625], [722.0, 499.00000000000006], [724.0, 657.6666666666666], [726.0, 1760.9999999999998], [712.0, 452.36363636363643], [738.0, 14.6], [736.0, 682.3333333333333], [750.0, 963.9230769230769], [748.0, 729.0], [746.0, 504.4], [740.0, 779.2], [742.0, 722.8333333333333], [752.0, 927.0], [766.0, 799.2857142857143], [764.0, 741.75], [762.0, 1522.0], [760.0, 399.0], [754.0, 709.6666666666667], [756.0, 484.5], [758.0, 304.625], [744.0, 670.0], [770.0, 416.88888888888897], [768.0, 472.0], [782.0, 445.7499999999999], [780.0, 964.6428571428572], [778.0, 666.5], [772.0, 406.75], [774.0, 873.1428571428571], [784.0, 401.6666666666667], [798.0, 267.375], [794.0, 359.6], [796.0, 709.5454545454545], [792.0, 266.3333333333333], [786.0, 403.5], [788.0, 876.8571428571429], [790.0, 486.0], [776.0, 29.28571428571429], [806.0, 17.5], [800.0, 989.0], [814.0, 419.2], [812.0, 1311.6000000000001], [810.0, 956.3333333333334], [804.0, 632.7272727272727], [802.0, 2151.0], [824.0, 1774.0], [826.0, 1318.6666666666665], [828.0, 537.0], [830.0, 459.25], [816.0, 129.29999999999998], [818.0, 39.0], [820.0, 1644.25], [822.0, 780.0000000000001], [808.0, 808.8], [834.0, 661.7499999999999], [832.0, 1093.0], [846.0, 99.78260869565217], [844.0, 772.7727272727273], [842.0, 939.6], [836.0, 632.7272727272726], [838.0, 416.25000000000006], [848.0, 371.5833333333334], [862.0, 752.3333333333334], [860.0, 293.00000000000006], [858.0, 1316.5], [856.0, 239.6], [850.0, 576.7142857142858], [852.0, 338.99999999999994], [854.0, 1343.5555555555557], [840.0, 323.57142857142856], [866.0, 288.0666666666667], [864.0, 321.0], [878.0, 482.91666666666663], [876.0, 1419.3333333333333], [874.0, 1049.75], [868.0, 1451.4], [870.0, 284.9375], [880.0, 464.8], [894.0, 782.7499999999999], [892.0, 947.8571428571429], [890.0, 826.0], [888.0, 36.916666666666664], [882.0, 349.6666666666667], [884.0, 752.6666666666667], [886.0, 330.18181818181813], [872.0, 283.1428571428571], [898.0, 660.625], [896.0, 370.4545454545455], [910.0, 731.5], [908.0, 617.3], [906.0, 285.66666666666663], [900.0, 813.5], [902.0, 464.0], [912.0, 963.7857142857141], [926.0, 587.3750000000001], [924.0, 581.8571428571429], [922.0, 672.55], [920.0, 474.75000000000006], [914.0, 717.5], [916.0, 1531.090909090909], [918.0, 746.7142857142858], [904.0, 726.2727272727273], [930.0, 698.3333333333334], [928.0, 11.222222222222221], [942.0, 125.0], [940.0, 1015.3333333333333], [938.0, 634.5714285714286], [932.0, 989.8333333333334], [934.0, 512.0], [944.0, 2045.0], [958.0, 266.3333333333333], [956.0, 1609.5333333333328], [954.0, 439.54545454545456], [952.0, 858.0], [946.0, 179.4], [948.0, 270.57142857142856], [950.0, 473.27272727272725], [936.0, 636.125], [962.0, 238.66666666666666], [960.0, 849.75], [974.0, 534.5], [972.0, 1431.3333333333333], [970.0, 97.06451612903224], [964.0, 967.2], [966.0, 23.666666666666664], [976.0, 1230.909090909091], [990.0, 818.8333333333331], [988.0, 110.13333333333334], [986.0, 590.3333333333334], [984.0, 552.75], [978.0, 421.0], [980.0, 902.611111111111], [982.0, 353.3636363636364], [968.0, 1192.4], [994.0, 16.833333333333332], [992.0, 358.0], [1006.0, 207.28571428571425], [1004.0, 428.2], [1002.0, 877.6], [996.0, 179.18750000000003], [998.0, 880.5], [1008.0, 1692.8333333333333], [1022.0, 437.6], [1020.0, 553.2], [1018.0, 542.1764705882352], [1016.0, 157.33333333333334], [1010.0, 752.8571428571428], [1012.0, 26.923076923076923], [1014.0, 274.44444444444446], [1000.0, 34.0], [1028.0, 2273.5], [1024.0, 423.25], [1052.0, 1902.0], [1048.0, 1242.7333333333331], [1044.0, 202.0], [1032.0, 496.4], [1036.0, 694.8571428571428], [1056.0, 219.13636363636363], [1084.0, 372.89473684210526], [1080.0, 1000.6666666666666], [1076.0, 769.6666666666666], [1072.0, 17.666666666666668], [1060.0, 401.0], [1064.0, 320.66666666666663], [1068.0, 318.89473684210526], [1040.0, 2162.0], [1092.0, 28.375], [1088.0, 319.58333333333337], [1116.0, 415.8888888888889], [1112.0, 426.33333333333337], [1108.0, 286.28571428571433], [1096.0, 163.93333333333334], [1100.0, 864.2142857142857], [1120.0, 724.5185185185185], [1148.0, 407.125], [1144.0, 23.0], [1140.0, 1131.4], [1136.0, 109.76190476190476], [1124.0, 67.3], [1128.0, 571.8], [1132.0, 408.3846153846154], [1104.0, 803.6], [1156.0, 348.4615384615384], [1152.0, 589.1052631578947], [1180.0, 548.8888888888889], [1176.0, 499.9722222222222], [1172.0, 593.0], [1160.0, 762.8000000000001], [1164.0, 213.44444444444446], [1184.0, 461.7692307692307], [1212.0, 663.9166666666666], [1208.0, 394.0869565217391], [1204.0, 97.06666666666668], [1200.0, 1405.4], [1188.0, 395.4736842105263], [1192.0, 278.22222222222223], [1196.0, 471.77777777777777], [1168.0, 471.8181818181818], [1220.0, 427.15384615384613], [1216.0, 472.99999999999994], [1244.0, 1502.6666666666665], [1240.0, 247.00000000000003], [1236.0, 460.00000000000006], [1224.0, 194.71428571428575], [1228.0, 164.71428571428572], [1248.0, 518.4285714285716], [1276.0, 659.4166666666666], [1272.0, 179.4090909090909], [1264.0, 556.8095238095237], [1268.0, 736.8823529411764], [1252.0, 871.2307692307693], [1256.0, 1683.5], [1260.0, 245.9090909090909], [1232.0, 365.6666666666667], [1288.0, 249.25], [1292.0, 470.8095238095238], [1280.0, 218.42857142857144], [1308.0, 388.71428571428567], [1304.0, 30.750000000000004], [1300.0, 175.33333333333334], [1284.0, 670.7647058823529], [1328.0, 595.4166666666666], [1332.0, 648.7272727272726], [1336.0, 824.0000000000001], [1340.0, 570.5], [1312.0, 517.875], [1316.0, 300.6000000000001], [1320.0, 348.2], [1324.0, 285.22222222222223], [1296.0, 383.75], [1348.0, 350.6923076923077], [1344.0, 1093.5], [1372.0, 657.0000000000001], [1368.0, 490.0], [1364.0, 191.49999999999994], [1352.0, 159.42857142857142], [1356.0, 1138.4444444444443], [1376.0, 552.7307692307692], [1404.0, 214.95833333333331], [1400.0, 1188.4615384615386], [1396.0, 174.66666666666666], [1392.0, 417.50000000000006], [1380.0, 66.88235294117646], [1384.0, 410.66666666666663], [1388.0, 40.90909090909091], [1360.0, 137.58064516129033], [1412.0, 433.6666666666667], [1408.0, 857.4761904761904], [1436.0, 159.90624999999997], [1432.0, 374.39130434782606], [1428.0, 388.54545454545456], [1416.0, 31.047619047619047], [1420.0, 377.37500000000006], [1440.0, 300.0], [1468.0, 301.6595744680851], [1464.0, 622.5], [1460.0, 42.6], [1456.0, 164.76923076923077], [1444.0, 178.99999999999997], [1448.0, 148.7142857142857], [1452.0, 438.1764705882353], [1424.0, 1471.2727272727275], [1476.0, 267.12000000000006], [1472.0, 279.33333333333337], [1500.0, 452.38461538461536], [1496.0, 967.375], [1492.0, 832.0000000000001], [1480.0, 238.0769230769231], [1484.0, 193.54999999999998], [1504.0, 143.57894736842104], [1532.0, 425.5], [1528.0, 56.61538461538461], [1524.0, 240.41666666666663], [1520.0, 74.15384615384616], [1508.0, 234.1818181818182], [1512.0, 78.9090909090909], [1516.0, 41.142857142857146], [1488.0, 807.0999999999999], [1540.0, 548.3124999999998], [1536.0, 618.5], [1564.0, 266.2727272727273], [1560.0, 1141.0], [1556.0, 19.5], [1544.0, 830.8571428571428], [1548.0, 181.5714285714286], [1568.0, 616.75], [1596.0, 406.8], [1592.0, 53.42857142857142], [1588.0, 397.24999999999994], [1584.0, 685.7142857142858], [1572.0, 205.1875], [1576.0, 184.5], [1580.0, 686.375], [1552.0, 371.875], [1604.0, 42.23076923076923], [1600.0, 262.7894736842106], [1628.0, 516.054054054054], [1624.0, 299.76000000000005], [1620.0, 837.8571428571429], [1608.0, 201.5], [1612.0, 459.93333333333334], [1632.0, 57.2], [1660.0, 21.687500000000004], [1656.0, 442.88888888888886], [1652.0, 231.1764705882353], [1648.0, 39.54545454545454], [1636.0, 38.0], [1640.0, 510.9743589743589], [1644.0, 321.28571428571433], [1616.0, 388.3913043478261], [1668.0, 31.11111111111111], [1664.0, 333.51515151515144], [1692.0, 47.2], [1688.0, 477.75000000000006], [1684.0, 1350.7142857142858], [1672.0, 267.38461538461536], [1676.0, 260.3428571428571], [1696.0, 386.3636363636365], [1724.0, 224.83333333333334], [1720.0, 464.3333333333333], [1716.0, 295.2352941176471], [1712.0, 481.17391304347825], [1700.0, 609.4230769230769], [1704.0, 608.0], [1708.0, 628.0909090909091], [1680.0, 69.1764705882353], [1732.0, 608.3043478260871], [1728.0, 251.88888888888894], [1756.0, 365.16666666666674], [1752.0, 463.5555555555555], [1748.0, 294.44444444444446], [1736.0, 190.25], [1740.0, 441.1176470588235], [1760.0, 378.27142857142866], [1788.0, 336.78181164629825], [1784.0, 354.77974978178725], [1780.0, 329.0992414664975], [1776.0, 331.6520132988546], [1764.0, 346.8979166666665], [1768.0, 292.06242118537176], [1772.0, 321.7745327102806], [1744.0, 571.7142857142858], [1796.0, 388.6240601503759], [1792.0, 372.3283671036951], [1800.0, 505.3365384615383], [1804.0, 374.2131147540985], [1808.0, 371.94265232974885], [1812.0, 357.2638888888889], [1816.0, 403.78260869565224], [1820.0, 322.5208333333333], [1824.0, 353.1829268292682], [1848.0, 307.3315217391307], [1852.0, 327.8620689655174], [1840.0, 274.01574803149595], [1844.0, 385.7286432160806], [1828.0, 287.4222222222223], [1832.0, 138.36363636363635], [1836.0, 246.13636363636354], [1856.0, 331.9903846153848], [1860.0, 331.2972972972973], [1864.0, 132.11111111111114], [1037.0, 153.375], [1025.0, 740.0], [1053.0, 1015.6], [1049.0, 1524.3333333333333], [1045.0, 1089.818181818182], [1029.0, 530.125], [1033.0, 117.125], [1073.0, 820.6153846153848], [1077.0, 657.8571428571429], [1081.0, 508.2222222222223], [1085.0, 16.333333333333332], [1057.0, 235.60869565217394], [1061.0, 419.3], [1065.0, 629.818181818182], [1069.0, 433.1666666666667], [1041.0, 293.0], [1093.0, 248.37500000000003], [1089.0, 510.2], [1117.0, 524.9999999999999], [1113.0, 364.5833333333333], [1109.0, 364.7142857142857], [1097.0, 1388.6666666666665], [1101.0, 1023.7142857142858], [1121.0, 438.85714285714283], [1149.0, 324.50000000000006], [1145.0, 1205.25], [1141.0, 1304.4285714285713], [1137.0, 220.92307692307693], [1125.0, 810.5555555555557], [1129.0, 485.56250000000006], [1133.0, 485.0], [1105.0, 311.46666666666664], [1157.0, 224.66666666666669], [1153.0, 373.1666666666667], [1181.0, 289.375], [1177.0, 986.2499999999999], [1173.0, 182.48148148148147], [1161.0, 843.2962962962962], [1165.0, 932.3750000000001], [1185.0, 656.5], [1213.0, 326.5714285714286], [1209.0, 248.11111111111111], [1205.0, 301.91666666666674], [1201.0, 1519.0], [1189.0, 115.19999999999999], [1193.0, 257.90000000000003], [1197.0, 495.0952380952381], [1169.0, 788.5263157894735], [1221.0, 1731.6666666666665], [1217.0, 713.9411764705883], [1245.0, 2141.0], [1241.0, 448.5384615384615], [1237.0, 337.6666666666667], [1225.0, 325.7142857142857], [1229.0, 568.1333333333333], [1249.0, 34.333333333333336], [1277.0, 259.7692307692307], [1273.0, 202.57142857142856], [1269.0, 894.2], [1265.0, 2136.1111111111113], [1253.0, 866.7142857142857], [1257.0, 314.7368421052632], [1261.0, 150.6], [1233.0, 525.875], [1285.0, 459.63157894736844], [1281.0, 357.24], [1309.0, 54.559999999999995], [1305.0, 244.10256410256414], [1301.0, 25.785714285714285], [1289.0, 640.8333333333334], [1293.0, 216.82608695652172], [1313.0, 776.1999999999999], [1341.0, 519.8], [1337.0, 1143.8571428571427], [1333.0, 287.2857142857142], [1329.0, 576.5555555555555], [1317.0, 147.2], [1321.0, 649.962962962963], [1325.0, 54.0], [1297.0, 196.66666666666669], [1349.0, 1596.3333333333335], [1345.0, 291.1111111111111], [1373.0, 29.583333333333336], [1369.0, 761.4], [1365.0, 200.33333333333334], [1353.0, 282.6944444444444], [1357.0, 465.0], [1377.0, 590.8965517241379], [1405.0, 1038.2], [1401.0, 831.375], [1397.0, 201.5], [1393.0, 450.66666666666663], [1381.0, 370.57142857142856], [1385.0, 111.78947368421052], [1389.0, 441.99999999999994], [1361.0, 1338.0], [1413.0, 1234.6], [1409.0, 306.61111111111114], [1437.0, 287.9444444444444], [1433.0, 871.25], [1417.0, 231.1666666666667], [1421.0, 599.2857142857143], [1441.0, 41.733333333333334], [1469.0, 75.42857142857143], [1465.0, 1221.3333333333335], [1461.0, 227.04545454545453], [1457.0, 206.83333333333331], [1445.0, 777.6666666666667], [1449.0, 254.68181818181822], [1453.0, 561.8], [1429.0, 46.333333333333336], [1425.0, 403.5161290322581], [1477.0, 552.4705882352941], [1473.0, 255.93333333333334], [1501.0, 23.423076923076923], [1497.0, 38.69565217391305], [1493.0, 1921.6], [1481.0, 323.57692307692315], [1485.0, 882.0], [1505.0, 374.99999999999994], [1533.0, 175.03846153846155], [1529.0, 797.8333333333334], [1525.0, 274.5384615384615], [1521.0, 864.1818181818181], [1509.0, 390.66666666666663], [1513.0, 169.64705882352942], [1517.0, 100.16666666666667], [1489.0, 1161.3333333333335], [1541.0, 1466.2222222222222], [1537.0, 56.57142857142858], [1565.0, 29.333333333333336], [1561.0, 201.42424242424244], [1557.0, 775.1999999999999], [1545.0, 1023.1176470588235], [1549.0, 54.18181818181818], [1569.0, 384.99999999999994], [1597.0, 289.38235294117646], [1593.0, 413.76923076923083], [1589.0, 68.875], [1585.0, 470.5499999999999], [1573.0, 410.3750000000001], [1577.0, 740.0], [1581.0, 387.0666666666668], [1553.0, 116.625], [1605.0, 451.4782608695653], [1601.0, 346.25000000000006], [1629.0, 1117.1578947368419], [1625.0, 544.0], [1621.0, 15.045454545454545], [1609.0, 99.12820512820512], [1613.0, 284.6842105263158], [1633.0, 204.18181818181822], [1661.0, 269.1951219512195], [1657.0, 700.5333333333333], [1653.0, 447.8235294117647], [1649.0, 288.79166666666663], [1637.0, 1125.9166666666665], [1641.0, 510.0], [1645.0, 463.8666666666667], [1617.0, 133.41176470588235], [1669.0, 245.27272727272728], [1665.0, 313.9375], [1693.0, 1372.7272727272727], [1689.0, 316.1333333333333], [1685.0, 861.5], [1673.0, 344.3636363636364], [1677.0, 302.7692307692308], [1697.0, 202.37500000000003], [1725.0, 567.8666666666667], [1721.0, 457.7894736842105], [1717.0, 540.1538461538462], [1701.0, 292.02777777777777], [1705.0, 816.6666666666667], [1709.0, 335.6], [1681.0, 21.235294117647054], [1733.0, 388.66666666666663], [1729.0, 366.8888888888888], [1757.0, 676.578947368421], [1753.0, 68.14285714285714], [1749.0, 532.6363636363636], [1737.0, 312.20512820512823], [1741.0, 50.0], [1761.0, 273.3129770992367], [1789.0, 401.5110000000006], [1785.0, 352.6346094946404], [1781.0, 332.9292326067479], [1777.0, 359.8582429121454], [1765.0, 331.219312602291], [1769.0, 346.93494809688616], [1773.0, 351.24647619047624], [1745.0, 228.35714285714286], [1797.0, 360.8467908902693], [1793.0, 326.5688073394499], [1801.0, 291.15286624203804], [1805.0, 247.76836158192097], [1809.0, 443.30994152046776], [1813.0, 225.1034482758621], [1817.0, 420.00000000000006], [1821.0, 510.53846153846143], [1825.0, 327.8518518518517], [1849.0, 259.3719008264464], [1853.0, 372.3045977011492], [1841.0, 226.05217391304353], [1845.0, 378.8750000000002], [1829.0, 793.8000000000001], [1833.0, 120.43902439024387], [1837.0, 465.4545454545456], [1857.0, 212.05696202531647], [1861.0, 388.30303030303037], [541.0, 1720.6], [519.0, 372.4], [517.0, 1888.625], [515.0, 1878.0], [513.0, 884.8571428571428], [527.0, 756.0], [525.0, 784.1666666666667], [543.0, 1897.5714285714287], [539.0, 1431.3333333333335], [537.0, 641.3333333333333], [529.0, 313.16666666666663], [531.0, 1214.5], [533.0, 1603.625], [535.0, 1667.4285714285716], [521.0, 1185.4], [523.0, 4.0], [569.0, 377.66666666666663], [549.0, 1211.3333333333333], [551.0, 1123.5], [545.0, 1343.3333333333333], [559.0, 847.6666666666667], [557.0, 2517.0], [571.0, 652.2857142857142], [573.0, 772.8571428571428], [561.0, 698.8333333333333], [575.0, 232.28571428571428], [563.0, 709.6666666666665], [565.0, 740.0000000000001], [567.0, 1700.3333333333333], [553.0, 1943.0], [555.0, 1431.6666666666665], [579.0, 790.090909090909], [591.0, 128.0], [587.0, 1161.6363636363637], [589.0, 1159.8], [577.0, 419.87500000000006], [581.0, 1265.0], [583.0, 961.0], [607.0, 910.3333333333334], [605.0, 1502.2], [603.0, 465.24999999999994], [601.0, 32.5], [593.0, 1189.5555555555557], [595.0, 237.0], [597.0, 1537.0], [599.0, 1059.142857142857], [585.0, 1040.75], [615.0, 1208.4], [611.0, 386.6], [621.0, 686.0], [623.0, 382.0], [609.0, 2038.5], [613.0, 643.3333333333333], [639.0, 369.2857142857143], [637.0, 624.6], [635.0, 14.333333333333334], [633.0, 11.0], [625.0, 720.3333333333333], [627.0, 7.0], [629.0, 305.87500000000006], [631.0, 1011.625], [617.0, 1510.6875000000002], [619.0, 17.333333333333332], [643.0, 1121.8], [655.0, 1038.909090909091], [653.0, 24.714285714285715], [641.0, 607.0], [645.0, 633.7142857142858], [647.0, 498.42857142857144], [671.0, 28.666666666666664], [669.0, 599.75], [667.0, 1263.5714285714284], [665.0, 1143.1000000000001], [657.0, 14.0], [659.0, 29.5], [661.0, 1158.0], [663.0, 702.0], [649.0, 805.8333333333333], [651.0, 396.6428571428572], [675.0, 981.0], [685.0, 1092.5], [683.0, 483.6666666666667], [673.0, 472.9230769230769], [687.0, 17.0], [677.0, 1461.0], [679.0, 826.2857142857143], [703.0, 378.66666666666663], [701.0, 1521.25], [699.0, 1330.5555555555557], [697.0, 537.5], [689.0, 366.0], [691.0, 898.6], [693.0, 612.25], [695.0, 171.0], [681.0, 216.26666666666668], [707.0, 16.545454545454543], [719.0, 1092.75], [717.0, 723.6666666666666], [715.0, 321.66666666666663], [705.0, 1136.4444444444443], [709.0, 13.25], [711.0, 743.0], [735.0, 614.6666666666666], [733.0, 953.4], [731.0, 478.2], [729.0, 52.285714285714285], [721.0, 1309.3333333333335], [723.0, 217.55555555555557], [725.0, 1588.142857142857], [727.0, 1242.0], [713.0, 1178.3333333333333], [739.0, 316.3846153846153], [751.0, 1204.2307692307693], [749.0, 916.8461538461538], [747.0, 287.45833333333326], [737.0, 1028.0], [741.0, 612.0666666666667], [743.0, 897.7], [767.0, 669.8235294117648], [765.0, 1362.2857142857144], [763.0, 1516.25], [761.0, 472.33333333333337], [753.0, 865.5714285714287], [755.0, 909.2222222222222], [757.0, 644.6], [759.0, 1210.2], [745.0, 151.5], [771.0, 1760.4], [783.0, 608.4285714285713], [781.0, 1545.6], [779.0, 756.1111111111111], [769.0, 1002.2727272727273], [773.0, 2192.0], [775.0, 1173.0], [799.0, 615.4285714285714], [797.0, 191.72727272727275], [795.0, 1086.6875000000002], [793.0, 698.1904761904761], [785.0, 493.9090909090909], [787.0, 929.5], [789.0, 333.2857142857143], [791.0, 599.25], [777.0, 1052.111111111111], [803.0, 240.26315789473685], [801.0, 1276.2222222222222], [815.0, 26.7], [813.0, 29.0], [811.0, 228.90909090909093], [805.0, 323.83333333333337], [807.0, 467.1], [825.0, 805.4166666666667], [827.0, 2598.0], [829.0, 372.11111111111114], [831.0, 361.0], [817.0, 397.66666666666663], [819.0, 527.8750000000001], [821.0, 171.58823529411765], [823.0, 680.5000000000001], [809.0, 689.1428571428572], [835.0, 923.2857142857143], [845.0, 1115.6666666666667], [843.0, 1602.5], [833.0, 880.375], [847.0, 118.0], [837.0, 6.0], [839.0, 552.2857142857141], [863.0, 792.0], [861.0, 430.1111111111111], [859.0, 1863.2], [857.0, 263.6666666666667], [849.0, 742.2727272727271], [851.0, 29.166666666666668], [853.0, 587.25], [855.0, 68.0], [841.0, 375.8333333333333], [867.0, 41.5], [879.0, 23.615384615384617], [877.0, 360.20000000000005], [875.0, 1308.6250000000002], [865.0, 1055.6666666666667], [869.0, 156.35294117647058], [871.0, 15.25], [895.0, 518.0], [893.0, 751.3333333333333], [891.0, 1209.6666666666665], [889.0, 845.7272727272727], [881.0, 360.59999999999997], [885.0, 1045.125], [883.0, 1700.8181818181818], [887.0, 150.4736842105263], [873.0, 549.625], [899.0, 307.1333333333334], [911.0, 1531.8333333333335], [909.0, 506.87499999999994], [907.0, 324.7142857142857], [897.0, 813.6], [901.0, 883.2857142857142], [903.0, 929.5714285714286], [927.0, 218.49999999999997], [925.0, 502.8888888888889], [923.0, 307.2307692307692], [921.0, 822.3333333333333], [913.0, 493.87500000000006], [917.0, 726.3199999999999], [915.0, 714.2857142857143], [919.0, 274.75], [905.0, 27.0], [931.0, 380.8], [943.0, 709.2307692307693], [941.0, 479.875], [939.0, 219.94444444444446], [929.0, 438.22222222222223], [933.0, 2043.7142857142856], [935.0, 449.9166666666667], [959.0, 213.84615384615384], [957.0, 534.9000000000001], [955.0, 671.375], [953.0, 208.92857142857144], [945.0, 1733.8333333333333], [947.0, 450.0869565217391], [949.0, 214.46153846153845], [951.0, 1270.6666666666667], [937.0, 300.38461538461536], [963.0, 1631.8], [975.0, 1078.818181818182], [973.0, 489.5], [971.0, 137.26315789473688], [961.0, 35.66666666666667], [965.0, 385.5806451612905], [967.0, 814.3333333333333], [991.0, 21.0], [989.0, 818.3333333333334], [987.0, 725.1000000000001], [985.0, 1022.5555555555555], [977.0, 438.7777777777778], [979.0, 301.4117647058824], [981.0, 641.2], [983.0, 201.75000000000006], [969.0, 715.8888888888889], [995.0, 636.0], [1007.0, 503.40000000000003], [1005.0, 430.5454545454546], [1003.0, 357.6923076923077], [993.0, 582.0], [997.0, 464.0769230769231], [999.0, 181.6896551724138], [1023.0, 783.9999999999999], [1021.0, 40.6], [1019.0, 1229.0], [1017.0, 39.66666666666667], [1009.0, 1137.5], [1011.0, 398.3636363636364], [1013.0, 396.66666666666663], [1015.0, 756.5], [1001.0, 1426.75], [1030.0, 880.4705882352941], [1054.0, 1219.181818181818], [1050.0, 591.8333333333333], [1046.0, 24.3], [1026.0, 568.8000000000001], [1034.0, 152.81249999999997], [1038.0, 259.75], [1086.0, 523.6], [1082.0, 907.1666666666667], [1078.0, 935.3750000000002], [1074.0, 258.22222222222223], [1058.0, 92.5], [1062.0, 410.6], [1066.0, 292.05555555555554], [1070.0, 1104.0], [1042.0, 696.1111111111111], [1094.0, 169.74999999999997], [1118.0, 118.90909090909089], [1114.0, 45.4], [1110.0, 520.4999999999999], [1090.0, 257.47058823529414], [1098.0, 1035.25], [1102.0, 316.3888888888888], [1150.0, 355.75], [1146.0, 120.375], [1142.0, 799.0], [1138.0, 389.18750000000006], [1122.0, 481.74999999999994], [1126.0, 222.47826086956522], [1130.0, 613.0], [1134.0, 303.5], [1106.0, 354.2413793103449], [1158.0, 429.0909090909091], [1182.0, 1089.625], [1178.0, 448.6363636363636], [1174.0, 597.5925925925926], [1154.0, 554.4545454545454], [1162.0, 421.8333333333333], [1166.0, 491.66666666666674], [1214.0, 547.75], [1210.0, 256.2727272727273], [1206.0, 486.3333333333333], [1202.0, 602.3636363636364], [1186.0, 223.3571428571429], [1194.0, 446.7368421052633], [1190.0, 568.5], [1198.0, 254.93750000000003], [1170.0, 479.24999999999994], [1222.0, 406.94117647058823], [1246.0, 414.22222222222223], [1242.0, 402.0952380952381], [1238.0, 1019.6], [1218.0, 1018.75], [1226.0, 351.2857142857142], [1230.0, 455.5], [1278.0, 778.6153846153846], [1274.0, 180.42105263157896], [1270.0, 308.3999999999999], [1266.0, 2009.0], [1250.0, 1437.5], [1254.0, 1136.2857142857142], [1258.0, 84.63333333333334], [1262.0, 466.66666666666674], [1234.0, 340.0769230769231], [1290.0, 903.8], [1282.0, 35.0], [1286.0, 21.666666666666668], [1310.0, 690.7], [1306.0, 334.5], [1302.0, 368.79999999999995], [1294.0, 1104.8333333333333], [1330.0, 515.6], [1334.0, 189.76470588235293], [1338.0, 1256.3076923076924], [1342.0, 26.695652173913043], [1314.0, 359.8684210526316], [1322.0, 17.25], [1318.0, 1112.8], [1326.0, 63.0], [1298.0, 493.45652173913044], [1350.0, 430.4545454545454], [1374.0, 168.66666666666666], [1370.0, 166.82857142857142], [1366.0, 509.62962962962945], [1346.0, 301.125], [1354.0, 514.4], [1358.0, 28.6875], [1406.0, 699.0], [1402.0, 340.7692307692307], [1398.0, 1202.5555555555557], [1394.0, 140.85714285714286], [1378.0, 388.5], [1382.0, 180.63414634146338], [1386.0, 471.8], [1390.0, 18.0], [1362.0, 407.8780487804877], [1414.0, 51.99999999999999], [1438.0, 370.00000000000006], [1434.0, 1112.7777777777778], [1430.0, 48.27272727272727], [1410.0, 628.4285714285713], [1418.0, 1231.6923076923076], [1422.0, 462.75], [1470.0, 231.31578947368425], [1466.0, 452.4444444444445], [1462.0, 134.91304347826085], [1458.0, 492.7407407407407], [1442.0, 166.53333333333336], [1446.0, 265.6279069767442], [1450.0, 251.33333333333331], [1454.0, 91.55555555555556], [1426.0, 117.03124999999997], [1478.0, 85.74999999999999], [1502.0, 331.19999999999993], [1498.0, 489.29999999999995], [1494.0, 26.555555555555554], [1474.0, 767.6666666666669], [1482.0, 646.5454545454545], [1486.0, 690.2142857142857], [1534.0, 261.1666666666667], [1530.0, 942.8461538461538], [1526.0, 584.0], [1522.0, 281.00000000000006], [1506.0, 73.85714285714286], [1510.0, 908.7272727272726], [1514.0, 262.85], [1518.0, 712.8461538461538], [1490.0, 926.6666666666667], [1542.0, 126.23529411764709], [1566.0, 1664.111111111111], [1562.0, 278.95238095238085], [1558.0, 1007.2727272727273], [1538.0, 188.55], [1546.0, 200.69354838709677], [1550.0, 367.42857142857144], [1598.0, 786.0], [1594.0, 86.0], [1590.0, 584.7727272727274], [1586.0, 1042.0], [1570.0, 45.76923076923077], [1574.0, 1725.3333333333333], [1578.0, 387.58333333333337], [1582.0, 182.88235294117646], [1554.0, 106.33333333333334], [1606.0, 731.0], [1630.0, 63.24242424242423], [1626.0, 290.70000000000005], [1622.0, 741.0714285714286], [1602.0, 227.53846153846155], [1610.0, 542.5], [1614.0, 535.5], [1662.0, 248.58333333333331], [1658.0, 523.4285714285714], [1654.0, 253.44827586206898], [1650.0, 45.8235294117647], [1634.0, 166.43999999999994], [1638.0, 410.0344827586207], [1642.0, 1089.7500000000002], [1646.0, 349.6785714285714], [1618.0, 213.11111111111111], [1670.0, 34.3], [1694.0, 1314.5294117647056], [1690.0, 423.1666666666667], [1686.0, 563.9166666666666], [1666.0, 475.5], [1674.0, 391.76744186046517], [1678.0, 190.8076923076923], [1726.0, 326.55555555555554], [1722.0, 301.2727272727273], [1718.0, 598.0833333333331], [1714.0, 1029.2857142857142], [1698.0, 395.57894736842104], [1702.0, 640.8888888888889], [1706.0, 108.96774193548387], [1710.0, 534.6666666666666], [1682.0, 182.77777777777774], [1734.0, 218.00000000000003], [1758.0, 312.9259259259259], [1754.0, 83.99999999999999], [1750.0, 535.3249999999999], [1730.0, 283.2068965517241], [1738.0, 85.5], [1742.0, 134.1], [1790.0, 336.77724204435845], [1786.0, 317.4542056074757], [1782.0, 334.5125737348647], [1778.0, 352.91563517915375], [1762.0, 468.45408163265296], [1766.0, 307.3292533659731], [1770.0, 318.5086932136846], [1774.0, 345.7326507394764], [1746.0, 687.5], [1798.0, 281.90697674418624], [1794.0, 315.44511459589773], [1802.0, 324.82467532467535], [1806.0, 352.7451612903224], [1810.0, 165.40666666666664], [1814.0, 243.55555555555566], [1818.0, 296.8595041322314], [1822.0, 252.00000000000003], [1826.0, 484.86666666666673], [1850.0, 313.85294117647044], [1854.0, 215.2693877551022], [1842.0, 308.8303030303027], [1846.0, 220.1604938271605], [1830.0, 109.05263157894736], [1834.0, 267.09836065573757], [1838.0, 342.9202898550726], [1858.0, 386.8699999999999], [1862.0, 617.2380952380952], [1031.0, 309.40000000000003], [1027.0, 783.5], [1055.0, 453.5], [1051.0, 670.8421052631579], [1047.0, 604.7142857142858], [1035.0, 913.4285714285714], [1039.0, 1320.5714285714284], [1075.0, 638.0], [1079.0, 432.7142857142857], [1083.0, 1634.3846153846155], [1087.0, 145.375], [1059.0, 745.3333333333333], [1063.0, 68.4], [1067.0, 120.72222222222221], [1071.0, 822.448275862069], [1043.0, 926.9000000000001], [1095.0, 32.09090909090909], [1119.0, 816.6666666666667], [1115.0, 612.6666666666667], [1111.0, 483.89473684210526], [1091.0, 15.0], [1099.0, 630.5714285714286], [1103.0, 229.1666666666667], [1151.0, 28.25], [1147.0, 416.07692307692304], [1143.0, 171.78571428571425], [1139.0, 1513.4], [1123.0, 17.142857142857142], [1127.0, 1025.3333333333333], [1131.0, 65.33333333333334], [1135.0, 571.6], [1107.0, 779.8571428571429], [1159.0, 964.7894736842105], [1183.0, 468.6666666666667], [1179.0, 139.625], [1175.0, 414.0769230769231], [1155.0, 510.28571428571433], [1163.0, 151.94444444444443], [1167.0, 140.08695652173913], [1215.0, 675.375], [1211.0, 314.0625], [1207.0, 419.57142857142856], [1203.0, 41.0], [1187.0, 820.0740740740741], [1191.0, 311.69999999999993], [1195.0, 212.83333333333334], [1199.0, 97.38461538461539], [1171.0, 136.8181818181818], [1223.0, 453.09523809523813], [1247.0, 509.2727272727273], [1243.0, 119.80000000000001], [1239.0, 1760.6666666666665], [1219.0, 502.0], [1227.0, 355.1428571428571], [1231.0, 16.375], [1279.0, 713.3499999999998], [1275.0, 240.52631578947364], [1271.0, 469.3999999999999], [1267.0, 723.0], [1251.0, 19.0], [1255.0, 267.79166666666663], [1259.0, 413.0833333333333], [1263.0, 228.85000000000008], [1235.0, 212.8181818181818], [1287.0, 807.2307692307693], [1311.0, 235.33333333333331], [1307.0, 213.125], [1303.0, 907.875], [1283.0, 172.24137931034485], [1291.0, 548.1666666666666], [1295.0, 397.27272727272725], [1343.0, 35.88888888888889], [1339.0, 615.3548387096773], [1335.0, 81.36000000000001], [1331.0, 477.4545454545455], [1315.0, 261.5], [1319.0, 232.95652173913044], [1323.0, 641.1666666666666], [1327.0, 172.18749999999997], [1299.0, 499.875], [1351.0, 448.16666666666663], [1375.0, 331.82352941176464], [1371.0, 478.4090909090909], [1367.0, 43.5], [1347.0, 255.29999999999998], [1355.0, 1452.142857142857], [1359.0, 445.73684210526307], [1407.0, 639.7142857142857], [1403.0, 349.25000000000006], [1399.0, 2333.166666666667], [1395.0, 389.03225806451616], [1379.0, 627.8085106382977], [1383.0, 308.8709677419353], [1387.0, 331.0], [1391.0, 77.78571428571428], [1363.0, 29.2], [1415.0, 163.8125], [1439.0, 660.1111111111111], [1435.0, 33.166666666666664], [1431.0, 379.18750000000006], [1411.0, 291.99999999999994], [1419.0, 299.3181818181818], [1423.0, 1132.8], [1471.0, 305.3], [1467.0, 232.60869565217388], [1463.0, 251.50000000000003], [1459.0, 515.3125000000001], [1443.0, 530.75], [1447.0, 643.6923076923076], [1451.0, 598.2857142857143], [1455.0, 42.612903225806456], [1427.0, 187.28571428571428], [1479.0, 610.1538461538461], [1503.0, 627.0500000000001], [1499.0, 386.49999999999994], [1495.0, 164.84], [1475.0, 130.8095238095238], [1483.0, 487.6363636363637], [1487.0, 521.9333333333333], [1535.0, 139.60000000000002], [1531.0, 337.03333333333325], [1527.0, 78.50000000000001], [1523.0, 722.04], [1507.0, 397.28000000000003], [1511.0, 38.0], [1515.0, 140.46428571428572], [1519.0, 563.25], [1491.0, 33.333333333333336], [1543.0, 298.91666666666663], [1567.0, 1060.5333333333333], [1563.0, 321.7272727272727], [1559.0, 1716.75], [1539.0, 933.8333333333334], [1547.0, 56.25], [1551.0, 869.0], [1599.0, 392.75], [1571.0, 463.8333333333333], [1595.0, 47.54545454545455], [1591.0, 592.2], [1587.0, 338.8999999999999], [1575.0, 409.77777777777777], [1579.0, 1348.2857142857144], [1583.0, 245.4736842105263], [1555.0, 173.35294117647055], [1607.0, 716.0], [1631.0, 341.7142857142857], [1627.0, 146.23076923076923], [1623.0, 128.26315789473685], [1603.0, 94.44000000000001], [1611.0, 720.8947368421054], [1615.0, 45.166666666666664], [1663.0, 596.7560975609755], [1659.0, 19.076923076923077], [1655.0, 201.61904761904762], [1651.0, 71.14285714285714], [1635.0, 54.636363636363626], [1639.0, 575.9090909090908], [1643.0, 656.625], [1647.0, 240.17857142857147], [1619.0, 373.6842105263158], [1671.0, 44.66666666666668], [1695.0, 86.59090909090911], [1691.0, 252.3846153846154], [1687.0, 176.32], [1667.0, 179.625], [1675.0, 1200.8333333333335], [1679.0, 334.91228070175436], [1727.0, 57.28571428571428], [1723.0, 198.15789473684208], [1719.0, 690.9999999999999], [1715.0, 373.1666666666667], [1699.0, 521.7272727272726], [1703.0, 483.31578947368416], [1707.0, 568.4736842105262], [1711.0, 70.44444444444443], [1683.0, 308.1], [1735.0, 110.33333333333333], [1759.0, 952.3636363636364], [1755.0, 303.12903225806446], [1751.0, 327.46874999999994], [1731.0, 61.46153846153847], [1739.0, 310.11764705882354], [1743.0, 229.44444444444446], [1791.0, 337.62586719524217], [1787.0, 340.917771883289], [1783.0, 365.762676886793], [1779.0, 325.70850722311457], [1763.0, 321.16037735849056], [1767.0, 318.1981371718881], [1771.0, 315.67637271214704], [1775.0, 366.39828998931125], [1747.0, 194.03571428571425], [1799.0, 372.55741626794196], [1795.0, 378.13742690058496], [1803.0, 451.7848837209303], [1807.0, 280.0415224913494], [1811.0, 275.8433734939758], [1815.0, 253.08333333333331], [1819.0, 308.79661016949143], [1823.0, 182.60714285714286], [1827.0, 297.4210526315789], [1851.0, 302.68589743589763], [1855.0, 297.3669354838713], [1843.0, 299.55729166666674], [1847.0, 442.89393939393915], [1831.0, 461.0588235294116], [1835.0, 310.68181818181824], [1839.0, 264.0235294117646], [1859.0, 354.6296296296296], [1863.0, 417.9310344827587], [1.0, 47.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1680.5749600000065, 371.0414699999992]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1864.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3065.4666666666667, "minX": 1.70664876E12, "maxY": 1259052.3166666667, "series": [{"data": [[1.70664906E12, 1226036.7666666666], [1.70664888E12, 1216601.2333333334], [1.70664894E12, 1191775.6], [1.70664876E12, 723357.9333333333], [1.70664882E12, 1259052.3166666667], [1.70664912E12, 399524.23333333334], [1.706649E12, 1190916.55]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70664906E12, 43788.03333333333], [1.70664888E12, 55006.86666666667], [1.70664894E12, 55551.9], [1.70664876E12, 10427.566666666668], [1.70664882E12, 53457.53333333333], [1.70664912E12, 3065.4666666666667], [1.706649E12, 55369.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70664912E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 333.1178449435869, "minX": 1.70664876E12, "maxY": 1146.3718411552352, "series": [{"data": [[1.70664906E12, 400.58318064067777], [1.70664888E12, 354.97168292928217], [1.70664894E12, 334.4333383136599], [1.70664876E12, 650.6296099761223], [1.70664882E12, 333.1178449435869], [1.70664912E12, 1146.3718411552352], [1.706649E12, 341.40693549193116]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70664912E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 333.06935099886346, "minX": 1.70664876E12, "maxY": 1146.2915162454865, "series": [{"data": [[1.70664906E12, 400.51241549251455], [1.70664888E12, 354.9118800925471], [1.70664894E12, 334.3773096269723], [1.70664876E12, 650.5327673122855], [1.70664882E12, 333.06935099886346], [1.70664912E12, 1146.2915162454865], [1.706649E12, 341.35322040673395]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70664912E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70664876E12, "maxY": 0.25656672857522067, "series": [{"data": [[1.70664906E12, 0.014721678144942175], [1.70664888E12, 0.02555074942158734], [1.70664894E12, 0.027441605657652336], [1.70664876E12, 0.25656672857522067], [1.70664882E12, 0.03105268605734379], [1.70664912E12, 0.0], [1.706649E12, 0.031279668215660084]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70664912E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70664876E12, "maxY": 4805.0, "series": [{"data": [[1.70664906E12, 4805.0], [1.70664888E12, 4488.0], [1.70664894E12, 4355.0], [1.70664876E12, 3186.0], [1.70664882E12, 3990.0], [1.70664912E12, 3016.0], [1.706649E12, 4275.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70664906E12, 2.0], [1.70664888E12, 2.0], [1.70664894E12, 1.0], [1.70664876E12, 2.0], [1.70664882E12, 1.0], [1.70664912E12, 3.0], [1.706649E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70664906E12, 2099.2000000000007], [1.70664888E12, 1796.4000000000015], [1.70664894E12, 1672.7000000000044], [1.70664876E12, 2143.0], [1.70664882E12, 1856.0], [1.70664912E12, 2318.1], [1.706649E12, 1668.800000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70664906E12, 3187.0], [1.70664888E12, 3173.1699999999983], [1.70664894E12, 3170.9900000000016], [1.70664876E12, 2675.0], [1.70664882E12, 3033.7700000000004], [1.70664912E12, 2733.2200000000034], [1.706649E12, 3244.9900000000016]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70664906E12, 57.0], [1.70664888E12, 69.0], [1.70664894E12, 61.0], [1.70664876E12, 46.0], [1.70664882E12, 52.0], [1.70664912E12, 1321.5], [1.706649E12, 65.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70664906E12, 2554.0], [1.70664888E12, 2518.0], [1.70664894E12, 2555.9500000000007], [1.70664876E12, 2334.5], [1.70664882E12, 2439.0], [1.70664912E12, 2458.75], [1.706649E12, 2560.9500000000007]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70664912E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 20.0, "minX": 1.0, "maxY": 1970.0, "series": [{"data": [[2.0, 64.5], [3.0, 56.0], [10.0, 54.5], [14.0, 170.0], [18.0, 64.0], [19.0, 58.0], [21.0, 58.0], [23.0, 59.0], [27.0, 529.0], [31.0, 48.0], [33.0, 47.0], [34.0, 48.0], [37.0, 52.0], [38.0, 1095.0], [46.0, 1931.5], [49.0, 1970.0], [48.0, 1899.5], [53.0, 1654.0], [55.0, 818.0], [59.0, 1525.0], [61.0, 1861.0], [63.0, 1596.0], [67.0, 1659.5], [64.0, 1649.0], [65.0, 1782.0], [74.0, 1703.0], [78.0, 1359.5], [87.0, 1489.0], [90.0, 69.5], [99.0, 63.0], [96.0, 74.0], [98.0, 65.5], [101.0, 1039.5], [100.0, 87.0], [110.0, 69.5], [108.0, 104.5], [114.0, 48.5], [121.0, 37.0], [125.0, 42.0], [127.0, 20.0], [132.0, 41.0], [129.0, 51.0], [142.0, 69.5], [136.0, 73.5], [147.0, 58.0], [144.0, 40.0], [159.0, 21.0], [155.0, 43.0], [152.0, 30.0], [164.0, 34.0], [163.0, 53.0], [161.0, 23.0], [174.0, 24.0], [168.0, 31.0], [175.0, 39.0], [183.0, 29.0], [186.0, 44.0], [197.0, 33.0], [198.0, 25.5], [194.0, 26.0], [192.0, 50.0], [199.0, 48.0], [200.0, 27.5], [202.0, 27.0], [211.0, 41.0], [217.0, 52.0], [225.0, 38.0], [230.0, 45.0], [226.0, 46.0], [233.0, 47.0], [240.0, 34.0], [246.0, 44.0], [247.0, 34.0], [241.0, 469.0], [243.0, 34.0], [252.0, 29.0], [249.0, 74.0], [261.0, 46.0], [271.0, 77.5], [258.0, 70.0], [259.0, 45.0], [256.0, 37.5], [287.0, 52.0], [278.0, 67.0], [281.0, 49.0], [283.0, 76.0], [277.0, 48.0], [282.0, 48.5], [285.0, 63.0], [286.0, 37.0], [274.0, 31.0], [302.0, 41.0], [296.0, 72.0], [291.0, 52.5], [301.0, 84.5], [288.0, 110.5], [289.0, 72.0], [290.0, 62.5], [303.0, 77.0], [294.0, 45.0], [293.0, 50.0], [292.0, 57.5], [295.0, 63.0], [297.0, 272.0], [298.0, 96.0], [299.0, 86.0], [305.0, 50.5], [309.0, 47.0], [306.0, 44.5], [317.0, 57.0], [318.0, 67.5], [319.0, 73.0], [313.0, 68.5], [312.0, 91.0], [316.0, 51.0], [307.0, 44.0], [310.0, 54.0], [304.0, 48.0], [311.0, 64.0], [308.0, 67.0], [314.0, 75.0], [315.0, 63.0], [333.0, 55.5], [327.0, 47.0], [330.0, 50.0], [331.0, 80.0], [328.0, 30.0], [329.0, 60.5], [325.0, 66.0], [324.0, 67.0], [326.0, 66.5], [334.0, 77.5], [321.0, 46.0], [320.0, 48.0], [322.0, 53.0], [332.0, 63.0], [323.0, 62.0], [351.0, 59.0], [342.0, 55.0], [344.0, 55.0], [343.0, 52.0], [337.0, 72.0], [338.0, 57.5], [341.0, 52.5], [340.0, 82.0], [339.0, 43.0], [350.0, 53.0], [348.0, 25.5], [345.0, 55.0], [346.0, 54.0], [347.0, 48.0], [354.0, 69.0], [357.0, 76.0], [355.0, 48.0], [364.0, 87.0], [359.0, 61.0], [356.0, 79.0], [353.0, 64.0], [365.0, 76.0], [360.0, 69.0], [363.0, 80.0], [361.0, 38.0], [362.0, 74.5], [358.0, 56.0], [369.0, 61.0], [368.0, 102.0], [381.0, 59.0], [371.0, 99.5], [383.0, 63.0], [375.0, 45.0], [378.0, 87.0], [376.0, 60.0], [372.0, 65.5], [374.0, 78.0], [379.0, 160.0], [397.0, 83.0], [387.0, 42.0], [398.0, 69.5], [395.0, 47.0], [388.0, 61.5], [392.0, 95.0], [385.0, 155.0], [410.0, 96.0], [411.0, 80.0], [406.0, 72.0], [402.0, 58.0], [405.0, 67.0], [401.0, 62.0], [400.0, 76.5], [407.0, 47.0], [422.0, 61.0], [424.0, 171.0], [473.0, 324.0], [468.0, 283.5], [1.0, 85.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 473.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 20.0, "minX": 1.0, "maxY": 1970.0, "series": [{"data": [[2.0, 64.5], [3.0, 55.5], [10.0, 54.5], [14.0, 163.5], [18.0, 64.0], [19.0, 58.0], [21.0, 58.0], [23.0, 59.0], [27.0, 529.0], [31.0, 48.0], [33.0, 47.0], [34.0, 47.0], [37.0, 52.0], [38.0, 1095.0], [46.0, 1931.5], [49.0, 1970.0], [48.0, 1899.0], [53.0, 1654.0], [55.0, 817.5], [59.0, 1525.0], [61.0, 1861.0], [63.0, 1595.0], [67.0, 1659.5], [64.0, 1649.0], [65.0, 1782.0], [74.0, 1703.0], [78.0, 1359.5], [87.0, 1489.0], [90.0, 69.5], [99.0, 63.0], [96.0, 74.0], [98.0, 65.5], [101.0, 1039.5], [100.0, 87.0], [110.0, 69.5], [108.0, 104.5], [114.0, 47.0], [121.0, 37.0], [125.0, 42.0], [127.0, 20.0], [132.0, 41.0], [129.0, 51.0], [142.0, 69.5], [136.0, 73.5], [147.0, 58.0], [144.0, 40.0], [159.0, 21.0], [155.0, 43.0], [152.0, 30.0], [164.0, 34.0], [163.0, 53.0], [161.0, 23.0], [174.0, 24.0], [168.0, 31.0], [175.0, 39.0], [183.0, 29.0], [186.0, 44.0], [197.0, 33.0], [198.0, 25.0], [194.0, 26.0], [192.0, 50.0], [199.0, 48.0], [200.0, 27.5], [202.0, 27.0], [211.0, 40.5], [217.0, 52.0], [225.0, 38.0], [230.0, 45.0], [226.0, 46.0], [233.0, 47.0], [240.0, 34.0], [246.0, 44.0], [247.0, 34.0], [241.0, 468.0], [243.0, 34.0], [252.0, 29.0], [249.0, 74.0], [261.0, 46.0], [271.0, 77.5], [258.0, 70.0], [259.0, 45.0], [256.0, 37.5], [287.0, 52.0], [278.0, 67.0], [281.0, 49.0], [283.0, 76.0], [277.0, 48.0], [282.0, 48.0], [285.0, 63.0], [286.0, 37.0], [274.0, 31.0], [302.0, 41.0], [296.0, 72.0], [291.0, 52.0], [301.0, 84.5], [288.0, 110.5], [289.0, 72.0], [290.0, 62.5], [303.0, 77.0], [294.0, 45.0], [293.0, 50.0], [292.0, 57.5], [295.0, 63.0], [297.0, 271.0], [298.0, 96.0], [299.0, 86.0], [305.0, 50.5], [309.0, 47.0], [306.0, 44.5], [317.0, 57.0], [318.0, 67.5], [319.0, 73.0], [313.0, 68.5], [312.0, 91.0], [316.0, 51.0], [307.0, 44.0], [310.0, 54.0], [304.0, 48.0], [311.0, 64.0], [308.0, 67.0], [314.0, 75.0], [315.0, 63.0], [333.0, 55.0], [327.0, 47.0], [330.0, 50.0], [331.0, 80.0], [328.0, 30.0], [329.0, 60.5], [325.0, 66.0], [324.0, 67.0], [326.0, 66.5], [334.0, 77.5], [321.0, 46.0], [320.0, 48.0], [322.0, 53.0], [332.0, 63.0], [323.0, 62.0], [351.0, 59.0], [342.0, 55.0], [344.0, 55.0], [343.0, 52.0], [337.0, 72.0], [338.0, 56.5], [341.0, 51.5], [340.0, 81.0], [339.0, 43.0], [350.0, 53.0], [348.0, 25.5], [345.0, 55.0], [346.0, 54.0], [347.0, 48.0], [354.0, 69.0], [357.0, 76.0], [355.0, 48.0], [364.0, 87.0], [359.0, 61.0], [356.0, 79.0], [353.0, 64.0], [365.0, 76.0], [360.0, 69.0], [363.0, 80.0], [361.0, 38.0], [362.0, 74.5], [358.0, 56.0], [369.0, 61.0], [368.0, 102.0], [381.0, 58.0], [371.0, 99.5], [383.0, 63.0], [375.0, 45.0], [378.0, 87.0], [376.0, 60.0], [372.0, 65.5], [374.0, 78.0], [379.0, 160.0], [397.0, 83.0], [387.0, 42.0], [398.0, 69.0], [395.0, 47.0], [388.0, 61.5], [392.0, 95.0], [385.0, 155.0], [410.0, 96.0], [411.0, 80.0], [406.0, 72.0], [402.0, 57.0], [405.0, 67.0], [401.0, 62.0], [400.0, 76.0], [407.0, 47.0], [422.0, 61.0], [424.0, 171.0], [473.0, 324.0], [468.0, 283.5], [1.0, 85.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 473.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16.95, "minX": 1.70664876E12, "maxY": 335.4166666666667, "series": [{"data": [[1.70664906E12, 263.6333333333333], [1.70664888E12, 331.01666666666665], [1.70664894E12, 335.4166666666667], [1.70664876E12, 64.48333333333333], [1.70664882E12, 322.26666666666665], [1.70664912E12, 16.95], [1.706649E12, 332.9]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70664912E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 18.466666666666665, "minX": 1.70664876E12, "maxY": 334.65, "series": [{"data": [[1.70664906E12, 263.78333333333336], [1.70664888E12, 331.3666666666667], [1.70664894E12, 334.65], [1.70664876E12, 62.81666666666667], [1.70664882E12, 322.03333333333336], [1.70664912E12, 18.466666666666665], [1.706649E12, 333.55]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70664912E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 18.466666666666665, "minX": 1.70664876E12, "maxY": 334.65, "series": [{"data": [[1.70664906E12, 263.78333333333336], [1.70664888E12, 331.3666666666667], [1.70664894E12, 334.65], [1.70664876E12, 62.81666666666667], [1.70664882E12, 322.03333333333336], [1.70664912E12, 18.466666666666665], [1.706649E12, 333.55]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70664912E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 18.466666666666665, "minX": 1.70664876E12, "maxY": 334.65, "series": [{"data": [[1.70664906E12, 263.78333333333336], [1.70664888E12, 331.3666666666667], [1.70664894E12, 334.65], [1.70664876E12, 62.81666666666667], [1.70664882E12, 322.03333333333336], [1.70664912E12, 18.466666666666665], [1.706649E12, 333.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70664912E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

